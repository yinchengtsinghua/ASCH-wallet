var http = require('http');
var secrets = require('../secrets.js');

//success!!
// pass in 5 of the 10 pre-generated shards (or whatever parameters you entered into ethPrivKeyShard.js
// ( eg your specifications could have been, require 3 sharded keys out of 5 to recover your 'lost' private key)
// to this pure recovery app.

// Usage:
//
//    node example_node.js
//
//  Visit http://127.0.0.1:1337/ in your browser.
//  You should see two identical keys displayed, one original
//  key, and then a key that resulted from splitting and combining shares.
//

//just using http for the moment, super basic. Not even express yet.
http.createServer(function (req, res) {

    var key, comb, shares, newShare;

//entering key variable not relevant to this recovery because we are assuming we are have lost our private key and are in disaster recovery mode.
    // key = 'fe1dfcaf50206561e507e9d659bdc8017907d4529f051152978d8df5b7d93328';
    //split into 10 shards with a threshold of 5
    // assume shares array has already been generated by running ethPrivKeyShard.js and are distributed to "Guardians" or private key shard holders.

    // console.log(shares);

    // *** for the moment, pass in shares directly.. assuming in real life have acquired 5 priv keys back off guardians.

    shares = [ '801dca105f9c0ff5d9a726ef04c2f1a5ce093cbeb542351086bedd721c03b46ea88a8aacbf813520047f51d9eba1dbfa52f', '8020e8d5dd4c46a937fd3a7daed9200ea424096538ee1d2a9d4087fa37dfe17f118f21fa93ac4ae2bc1480b82118c26c9ea', '8031ebc1799e9f2e6ecbff6e68da56e21515da8575e28f9cbee5478fbbd175bbe8faaaa23b0010a80611dec9c8f641997b8', '804c7c50cbf9dc32633e0e7d79eaa50113cc37da2c59cd9bb9e05d794ca45ab35c9e1f2d1d72419b475453e8ff5ff8c07ac', '8058923b6d909738b9fd60bb53ad56f18cb93e1dfc45469f434e8cf1b123ac56404210f97bd035e1ef99581b266c4211b48'];

    comb = secrets.combine( shares );

    /*
    //create another share with an id of 8
    newShare = secrets.newShare(8, shares);
    //reconstruct using 4 original shares and the new share;
    comb = secrets.combine( shares.slice(1,5).concat(newShare) );
*/

    res.writeHead(200, {'Content-Type': 'text/plain'});
    res.end('You should see two identical keys below and the split shards, before and after share and combine.\n\n' + "Private key to be sharded: " + key + '\n' + "Private key shard array: " + shares + '\n' + "Recovered Private Key: " + comb);

}).listen(1337, '127.0.0.1');
console.log('Server running at http://127.0.0.1:1337/');
